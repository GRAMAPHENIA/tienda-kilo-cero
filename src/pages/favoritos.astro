---
import BaseLayout from '../layouts/BaseLayout.astro';
import ProductoCard from '../components/ProductoCard.astro';

const title = 'Favoritos - Tienda Kilo Cero';

// En una aplicación real, obtendrías los productos desde una API o base de datos
// Aquí simulamos algunos productos para mostrar la funcionalidad
const productos = [
	{
		id: 1,
		nombre: 'Producto 1',
		descripcion: 'Descripción del producto 1. Este es un producto de ejemplo con características destacadas.',
		precio: 29.99,
		imagen: '/placeholder.svg'
	},
	{
		id: 2,
		nombre: 'Producto 2',
		descripcion: 'Descripción del producto 2. Otro producto excelente con cualidades únicas.',
		precio: 49.99,
		imagen: '/placeholder.svg'
	},
	{
		id: 3,
		nombre: 'Producto 3',
		descripcion: 'Descripción del producto 3. Un producto más en nuestra colección.',
		precio: 19.99,
		imagen: '/placeholder.svg'
	}
];
---

<BaseLayout title={title}>
	<section class="">
		<div class="space-y-16">
			<div class="text-center space-y-4">
				<h1 class="text-4xl md:text-5xl font-title font-light text-header-text tracking-tight">Mis Favoritos</h1>
				<p class="text-xl font-light text-header-text/70 max-w-2xl mx-auto leading-relaxed">Productos que has marcado como favoritos</p>
			</div>

			<div id="favoritos-container" class="grid grid-cols-1 md:grid-cols-3 gap-12 md:gap-16">
				<!-- Los productos favoritos se cargarán dinámicamente con JavaScript -->
			</div>

			<div id="empty-favorites" class="text-center py-20 hidden">
				<h2 class="text-2xl font-semibold mb-6 text-header-text">No tienes productos favoritos aún</h2>
				<p class="text-header-text mb-8">Explora nuestros productos y agrega tus favoritos haciendo clic en el corazón.</p>
				<a href="/productos" class="bg-primary text-primary-text px-8 py-4 font-medium hover:bg-secondary transition duration-300">Explorar Productos</a>
			</div>
		</div>
	</section>
</BaseLayout>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		loadFavorites();
	});

	function loadFavorites() {
		const favorites = JSON.parse(localStorage.getItem('favorites') || '[]');
		const container = document.getElementById('favoritos-container');
		const emptyMessage = document.getElementById('empty-favorites');

		if (!container || !emptyMessage) return;

		if (favorites.length === 0) {
			container.innerHTML = '';
			emptyMessage.classList.remove('hidden');
			return;
		}

		emptyMessage.classList.add('hidden');

		// En una aplicación real, harías una petición a la API para obtener los productos
		// Aquí simulamos con productos de ejemplo
		const productos = [
			{
				id: 1,
				nombre: 'Producto 1',
				descripcion: 'Descripción del producto 1. Este es un producto de ejemplo con características destacadas.',
				precio: 29.99,
				imagen: '/placeholder.svg'
			},
			{
				id: 2,
				nombre: 'Producto 2',
				descripcion: 'Descripción del producto 2. Otro producto excelente con cualidades únicas.',
				precio: 49.99,
				imagen: '/placeholder.svg'
			},
			{
				id: 3,
				nombre: 'Producto 3',
				descripcion: 'Descripción del producto 3. Un producto más en nuestra colección.',
				precio: 19.99,
				imagen: '/placeholder.svg'
			}
		];

		const favoriteProducts = productos.filter(producto => favorites.includes(producto.id));

		container.innerHTML = favoriteProducts.map(producto => `
			<article class="group cursor-pointer border border-header-text/10 hover:border-primary/20 transition-colors duration-300">
				<div class="aspect-square overflow-hidden mb-8">
					<img src="${producto.imagen}" alt="${producto.nombre}" class="w-full h-full object-cover transition-transform duration-700 ease-out group-hover:scale-105 bg-primary" />
				</div>
				<div class="space-y-4 p-4">
					<div class="flex justify-between items-start">
						<h3 class="text-xl font-light text-header-text tracking-wide group-hover:text-primary transition-colors duration-300">${producto.nombre}</h3>
						<button id="fav-${producto.id}" class="text-header-text hover:text-[#EC0B43] transition-colors duration-300 opacity-0 group-hover:opacity-100" onclick="toggleFavorite(${producto.id})">
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor" stroke="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5"><path d="M2 9.5a5.5 5.5 0 0 1 9.591-3.676.56.56 0 0 0 .818 0A5.49 5.49 0 0 1 22 9.5c0 2.29-1.5 4-3 5.5l-5.492 5.313a2 2 0 0 1-3 .019L5 15c-1.5-1.5-3-3.2-3-5.5"/></svg>
						</button>
					</div>
					<p class="text-header-text/60 text-sm leading-relaxed">${producto.descripcion}</p>
					<div class="flex justify-between items-center pt-4">
						<span class="text-primary font-semibold text-xl">$${producto.precio}</span>
						<button onclick="addToCart(${producto.id}, '${producto.nombre}', ${producto.precio}, '${producto.imagen}')" class="bg-primary text-primary-text px-6 py-3 font-light tracking-wider hover:bg-secondary transition-all duration-500 ease-out text-sm">
							Agregar
						</button>
					</div>
				</div>
			</article>
		`).join('');

		// Actualizar iconos de favoritos
		favorites.forEach((id: number) => {
			const button = document.getElementById(`fav-${id}`);
			if (button) {
				const svg = button.querySelector('svg');
				if (svg) {
					svg.classList.add('fill-current', 'text-[#EC0B43]');
					// Asegurar que el botón sea visible ya que es favorito
					button.classList.remove('opacity-0');
					button.classList.add('opacity-100');
				}
			}
		});
	}

	// Escuchar cambios en favoritos
	window.addEventListener('favoritesUpdated', loadFavorites);
</script>